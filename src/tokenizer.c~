#include <stlib.h>
#include <stdio.h>
#include <string.h>

int space_char(char c){
  if((c == ' ' || c == '\t')&&c != '\0')
    return 1;

  return 0;
} // true if c is a tab or space, and not zero

int non_space_char(char c){ // true if c not a tab or space, and not zero
  if((c != ' ' || c != '\t')&&c != '\0')
    return 1;
      
  return 0;
} 
char *token_start(char *s){ // * to first (non-space) char in first token in s.  Return zero if there are no tokens in s.
  if (s == NULL)
    return NULL;
  
  while (1){
    if(non_space_char(*s))
      return s;
    s++;
  }  
  return NULL;
  
}
  
char *token_terminator(char *token){ // * to char after end of token.
  if (token == NULL)
    return NULL;
  
  while (1){
    if(space_char(*token))
      return token;
    token++;
  }  
  return NULL;

}  
  
int count_tokens(char *s){ // the number of tokens in s

  int counter = 0;
  while(*s!='\0'){
    if(space_char(*s))
      counter++;
    s++;
  
  return counter;
    
  }
  return 0;

}  
  
char *copy_str(char *inStr, short len){ // return a pointer to a (terminated) copy of inStr
  if (inStr == NULL || len <= 0)
    return NULL;
  
  char *copy = (char *)malloc((len + 1) * sizeof(char));
  if (copy == NULL)
    return NULL;
  
  strncpy(copy, inStr, len);
  copy[len] = '\0';
  
  return copy;
}
